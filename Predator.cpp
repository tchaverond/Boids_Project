//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Predator.h"




//############################################################################
//                                                                           #
//                           Class Predator                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

int Predator::headcount = 0;

// ===========================================================================
//                                  Constructors
// ===========================================================================

Predator::Predator(void) : Agent ()
{

	devour_radius = 0;
	devour_delay = 0;
	hunt_speed = 0;
	printf("Fake predator created succesfully !\n");
}

Predator::Predator(double init_x, double init_y) : Agent (init_x, init_y)
{

	devour_radius = 4;
	devour_delay = 100;
	hunt_speed = 20;

	headcount ++;
	printf("Predator created succesfully !\n");
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
Predator::~Predator(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================

void Predator::huntPrey(Agent* victim)
{
	// getting direction of the nearest prey
    new_x_vel = x - victim->get_x();
    new_y_vel = y - victim->get_y();

    // going towards it at the required speed
    double new_vel = sqrt((new_x_vel * new_x_vel) + (new_y_vel * new_y_vel));
    new_x_vel /= new_vel/hunt_speed;                  // TODO : DUPLICATE HUNT_SPEED INTO AGENT TO MAKE IT COMPILE (?)
    new_y_vel /= new_vel/hunt_speed;  
}

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
